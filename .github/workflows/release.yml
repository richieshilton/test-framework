# This is a basic workflow to help you get started with Actions

name: Distribute framework to github distribution

# Controls when the action will run. 
on:
   # Enable manual dispatch of the workflow
  workflow_dispatch:
#   push:
#     branches: [ main ]

env:
  SCHEME: TestFramework
  CONFIGURATION: Release
  ARCHIVE_DIR: Archive
  SIMULATOR_ARCHIVE_NAME: simulator.xcarchive
  DEVICE_ARCHIVE_NAME: device.xcarchive
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "create_release"
  create_release:
    # The type of runner that the job will run on
    runs-on: macos-10.15
    timeout-minutes: 20

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out source repository
        uses: actions/checkout@v2

      # Run dependency fetch. e.g: cocoapods if needed.

      - name: Setup Xcode version
        # You may pin to the exact commit or the version.
        # uses: maxim-lobanov/setup-xcode@39fba9d7d77a658123787968f124e64e41ee38a1
        uses: maxim-lobanov/setup-xcode@v1.1
        with:
          # Version of Xcode to use
          xcode-version: "latest-stable"
          
      # Create a release
      - name: Archive for simulator
        run: |
          xcodebuild archive \
            -archivePath $ARCHIVE_DIR/$SIMULATOR_ARCHIVE_NAME \
            -scheme $SCHEME \
            -sdk iphonesimulator \
            -destination "iOS Simulator" \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            SKIP_INSTALL=NO \
            BUILD_LIBRARIES_FOR_DISTRIBUTION=YES
      - name: Archive for generic iOS devices
        run: |
          xcodebuild archive \
            -archivePath $ARCHIVE_DIR/$DEVICE_ARCHIVE_NAME \
            -scheme $SCHEME \
            -sdk iphoneos \
            -destination "iOS" \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            ONLY_ACTIVE_ARCH=NO \
            SKIP_INSTALL=NO \\
            BUILD_LIBRARIES_FOR_DISTRIBUTION=YES
            
      - name: Create universal XCFramework
        run: |
          xcodebuild -create-xcframework \
            -framework $ARCHIVE_DIR/$SIMULATOR_ARCHIVE_NAME/Products/Library/Frameworks/$SCHEME.framework \
            -framework $ARCHIVE_DIR/$DEVICE_ARCHIVE_NAME/Products/Library/Frameworks/$SCHEME.framework \
            -output $ARCHIVE_DIR/$SCHEME.xcframework
          rm -rf $ARCHIVE_DIR/$DEVICE_ARCHIVE_NAME
          rm -rf $ARCHIVE_DIR/$SIMULATOR_ARCHIVE_NAME
          
      # Upload build artifacts
      - name: Upload xcframework
        uses: actions/upload-artifact@v2
        with:
          name: XCFramework
          path: Archive/
